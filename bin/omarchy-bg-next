#!/usr/bin/env bash

# omarchy-bg-next - Cycle to the next background for the current theme
# Based on the original Omarchy omarchy-theme-bg-next script

# Configuration
OMARCHY_CONFIG_DIR="$HOME/.config/omarchy"
WALLPAPERS_DIR="$HOME/Pictures/Wallpapers"
CURRENT_BG_LINK="$OMARCHY_CONFIG_DIR/current/background"

# Ensure configuration directory exists
mkdir -p "$OMARCHY_CONFIG_DIR/current"

# Get current theme from Nix configuration (fallback to tokyo-night)
# In a real deployment, this could read from a state file or environment variable
CURRENT_THEME="${OMARCHY_THEME:-tokyo-night}"

# Define wallpapers for each theme
declare -A THEME_WALLPAPERS
THEME_WALLPAPERS[tokyo-night]="1-Pawel-Czerwinski-Abstract-Purple-Blue.jpg 2-Milad-Fakurian-Abstract-Purple-Blue.jpg 3-scenery-pink-lakeside-sunset-lake-landscape-scenic-panorama-7680x3215-144.png"
THEME_WALLPAPERS[kanagawa]="kanagawa-1.png"
THEME_WALLPAPERS[everforest]="1-everforest.jpg"
THEME_WALLPAPERS[nord]="nord-1.png"
THEME_WALLPAPERS[gruvbox]="gruvbox-1.jpg"
THEME_WALLPAPERS[gruvbox-light]="gruvbox-1.jpg"
THEME_WALLPAPERS[catppuccin-latte]="1-Pawel-Czerwinski-Abstract-Purple-Blue.jpg"

# Get wallpapers for current theme
CURRENT_WALLPAPERS=(${THEME_WALLPAPERS[$CURRENT_THEME]})

# If only one wallpaper, no need to cycle
if [[ ${#CURRENT_WALLPAPERS[@]} -le 1 ]]; then
    echo "Only one background available for theme '$CURRENT_THEME'"
    exit 0
fi

# Determine current background
CURRENT_BG=""
if [[ -L "$CURRENT_BG_LINK" && -f "$CURRENT_BG_LINK" ]]; then
    CURRENT_BG=$(basename "$(readlink "$CURRENT_BG_LINK")")
fi

# Find current index and determine next background
NEXT_BG=""
FOUND_CURRENT=false

for i in "${!CURRENT_WALLPAPERS[@]}"; do
    if [[ "${CURRENT_WALLPAPERS[$i]}" == "$CURRENT_BG" ]]; then
        # Found current, get next (or wrap to first)
        NEXT_INDEX=$(( (i + 1) % ${#CURRENT_WALLPAPERS[@]} ))
        NEXT_BG="${CURRENT_WALLPAPERS[$NEXT_INDEX]}"
        FOUND_CURRENT=true
        break
    fi
done

# If current not found, start with first
if [[ "$FOUND_CURRENT" == false ]]; then
    NEXT_BG="${CURRENT_WALLPAPERS[0]}"
fi

# Set the next background
NEXT_BG_PATH="$WALLPAPERS_DIR/$NEXT_BG"

if [[ ! -f "$NEXT_BG_PATH" ]]; then
    echo "Error: Background file not found: $NEXT_BG_PATH"
    exit 1
fi

echo "Switching to background: $NEXT_BG"

# Kill existing swaybg processes
pkill swaybg 2>/dev/null || true

# Wait a moment for cleanup
sleep 0.2

# Start swaybg with new wallpaper
swaybg -i "$NEXT_BG_PATH" -m fill &

# Update current background symlink
rm -f "$CURRENT_BG_LINK"
ln -sf "$NEXT_BG_PATH" "$CURRENT_BG_LINK"

echo "Background changed to: $NEXT_BG"